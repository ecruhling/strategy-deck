@import "utils/_custom_props";
@import "utils/_functions";

// Admin & Block
body.post-type-deck {
  .editor-styles-wrapper {
	.wp-block-post-content {
	  display: flex;
	  flex-wrap: wrap;
	  margin-left: -0.4rem;
	  margin-right: -0.4rem;
	  margin-top: 0;
	  height: 55vh;
	  justify-content: center;
	  align-items: center;

	  .wp-block-strategydeck-deck-card {
	  }
	}
  }
}

// Frontend only
#deck-form {
  .wp-block-strategydeck-deck-card {
	label {
	  pointer-events: none;
	}
  }
}

// block
.wp-block-strategydeck-deck-card {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 1rem;
  height: 10vw;
  min-height: 70px;
  max-height: 115px;
  max-width: 205px !important;
  margin: 0 0.5rem 1rem;

  label {
	transition: all 0.25s ease-in-out;
	display: inline-block;
	color: #b1a57e;
	margin-bottom: 0 !important;
	padding: 3px 5px;
	line-height: 1;
	font-family: "Domaine Display Regular", sans-serif;
	font-size: 1.375rem;
	z-index: 20;
  }

  input {
	transition: all 0.25s ease-in-out;
	background-color: #fff9f1;
	appearance: none;
	border: solid 2px #b1a57e;
	border-radius: 2px;
	position: absolute;
	inset: 0;
	width: 100%;
	height: 100%;
	display: block;
	z-index: 10;

	&::before {
	  display: none !important;
	}

	&:hover,
	&:checked {
	  border-color: #3e5e6f;
	  cursor: pointer;

	  + label {
		color: #3e5e6f !important;
	  }
	}

	&:checked {
	  background-color: #3e5e6f;

	  + label {
		color: #fff9f1 !important;
		font-style: italic;
	  }}
  }

  span.notice {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translateX(-50%) translateY(-50%);
	z-index: 25;
  }

  @media (min-width: 768px) {
	flex: 0 0 auto;
	width: 16.6667% !important;
  }
}

#deck-print {
  transition: all 0.25s ease-in-out;
  width: 15px;
  height: 20px;
  background: url(escape_svg("data:image/svg+xml,<svg height='20' viewBox='0 0 15 20' width='15' xmlns='http://www.w3.org/2000/svg'><g fill='#fff9f1'><path d='m7.51 0c-.47 0-.84.37-.84.83v12.86l-5.22-5.2c-.32-.33-.85-.35-1.19-.03-.33.31-.35.84-.03 1.17.01.01.02.02.04.03l6.65 6.59c.04.04.08.07.13.1h.03l.11.06h.05c.03.01.07.02.11.03.05.01.11.01.16 0 .06.01.11.01.17 0 .03-.01.07-.02.1-.03h.05l.11-.06h.03l.13-.1 6.65-6.59c.32-.33.3-.86-.04-1.17-.32-.3-.83-.3-1.15 0l-5.22 5.17v-12.83c0-.46-.37-.83-.83-.83z'/><path d='m.85 20h13.31c.3 0 .58-.16.73-.42s.15-.58 0-.84-.43-.42-.73-.42h-13.31c-.3 0-.58.16-.73.42-.15.26-.15.58 0 .84.16.26.43.42.73.42z'/></g></svg>")) no-repeat 50% / cover; /* stylelint-disable-line */

  &:hover {
	background: url(escape_svg("data:image/svg+xml,<svg height='20' viewBox='0 0 15 20' width='15' xmlns='http://www.w3.org/2000/svg'><g fill='#91848f'><path d='m7.51 0c-.47 0-.84.37-.84.83v12.86l-5.22-5.2c-.32-.33-.85-.35-1.19-.03-.33.31-.35.84-.03 1.17.01.01.02.02.04.03l6.65 6.59c.04.04.08.07.13.1h.03l.11.06h.05c.03.01.07.02.11.03.05.01.11.01.16 0 .06.01.11.01.17 0 .03-.01.07-.02.1-.03h.05l.11-.06h.03l.13-.1 6.65-6.59c.32-.33.3-.86-.04-1.17-.32-.3-.83-.3-1.15 0l-5.22 5.17v-12.83c0-.46-.37-.83-.83-.83z'/><path d='m.85 20h13.31c.3 0 .58-.16.73-.42s.15-.58 0-.84-.43-.42-.73-.42h-13.31c-.3 0-.58.16-.73.42-.15.26-.15.58 0 .84.16.26.43.42.73.42z'/></g></svg>")) no-repeat 50% / cover; /* stylelint-disable-line */
  }
}

$spinnerSize: 20;

svg.spinner {
  width: $spinnerSize + px;
  height: $spinnerSize + px;
  x: 0px;
  y: 0px;
  viewBox: 0 0 $spinnerSize $spinnerSize;

  circle {
	fill: transparent;
	stroke: rgba(176, 189, 197, 0.75);
	stroke-width: 3;
	stroke-linecap: round;
	stroke-dasharray: (3.14 * $spinnerSize);
	transform-origin: (0.5px * $spinnerSize) (0.5px * $spinnerSize) 0;
	animation: spinner 1.5s linear infinite;
  }
}

@keyframes spinner {
  0% {
	transform: rotate(0deg);
	stroke-dashoffset: (0.66 * $spinnerSize);
  } 50% {
	  transform: rotate(720deg);
	  stroke-dashoffset: (3.14 * $spinnerSize);
	} 100% {
		transform: rotate(1080deg);
		stroke-dashoffset: (0.66 * $spinnerSize);
	  }
}

@function escape-svg($string) {
  @if str-index($string, "data:image/svg+xml") {
	@each $char, $encoded in $escaped-characters {
	  // Do not escape the url brackets
	  @if str-index($string, "url(") == 1 {
		$string: url("#{str-replace(str-slice($string, 6, -3), $char, $encoded)}");
	  } @else {
		$string: str-replace($string, $char, $encoded);
	  }
	}
  }

  @return $string;
}
